package stimmax.lessons.lesson3.homework

// 1. Название мероприятия (неизменяемая публичная переменная известная на момент написания)
val name: String = "Monster Hackaton"

// 2. Дата проведения (публичная переменная известная на момент написания, но может быть изменена из-за переноса)
var date: String = "10 ноября 2025"

// 3. Место проведения
var place: String = "Royal Street"

// 4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы. (приватная неизменяемая переменная - её не должны увидеть и бюджет уже запланирован и утверждён и не должен изменяться)
private val budget: String = "подробная информация с перечислением поставщиков и сумм для внутреннего пользования"

// 5. Количество участников
lateinit var participantsCount: Int

// 6. Длительность хакатона
val durationHackaton: Int = 3

// 7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.
private val supplierContact: String = "информация для поставщиков"

// 8. Текущее состояние хакатона (статус)
var statusHackaton: String = "Не начался"

// 9. Список спонсоров
var sponsors: String = "Спонсоры"

// 10. Бюджет мероприятия
private var budget: Int = 1000000

// 11. Текущий уровень доступа к интернету
var internetStatus: Boolean = true

// 12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.
private var infoResources: String = "Информация о ресурсах"

// 13. Количество команд
var teams: Int = 0

// 14. Перечень задач
val tasks: String = "Задача 1, Задача 2"

// 15. План эвакуации
val evacuationPlan: String = "План эвакуации"

// 16. Список доступного оборудования (всё, что выделено для использования на мероприятии)
var availableResources: String = "Список доступного оборудования"

// 17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками)
var freeResources: String = "Список свободного оборудования"

// 18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала) (публичная изменяемая переменная с отложенной инициализацией, так как на момент создания поставщик и график не известны)
lateinit var mealSchedule: String

// 19. План мероприятий на случай сбоев
private val failurePlan: String = "План на случай сбоев"

// 20. Список экспертов и жюри
var experts: String = "Эксперты"

// 21. Политика конфиденциальности
val privacyPolicy: String = "Политика конфиденциальности"

// 22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
lateinit private var prReviews: String

// 23. Текущая температура в помещении
var currentTemperature: Double = 19.5

// 24. Данные мониторинга и анализ производительности сетевого оборудования и интернет-соединения для целей отладки своих приложений командами
private var monitoringData: String = "Данные мониторинга"

// 25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
var speedLimitFactor: Double = 0.5

// 26. Уровень освещения
var lightLevel: Int = 5

// 27. Лог событий мероприятия
var eventLog: String by lazy {
    "Начало мероприятия"
}

// 28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
val accessAmbulance: Boolean = true

// 29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
private val securityPlans: String = "Планы по безопасности"

// 30. Регистрационный номер мероприятия
val regNumEvent: Int = 132

// 31. Максимально допустимый уровень шума в помещении хакатона.
val maxNoiseLevel: Int = 10

// 32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
var isNoiseLevelExceed: Boolean = false

// 33. План взаимодействия с прессой
var planMedia: String = "План работы с прессой"

// 34. Детальная публичная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
lateinit var teamPublicData: String

// 35. Статус получения всех необходимых разрешений для проведения мероприятия
var statusPermissionsEvent: String = "Разрешено"

// 36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
var isAvailableSpecialResources: Boolean = false

// 37. Список партнеров мероприятия
var partnersEvent: String = "Партнеры"

// 38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
lateinit var reportFinal: String

// 39. Внутренние правила распределения призов
private val rulesPrize: String = "Правила призов"

// 40. Список разыгрываемых призов
var listPrizes: String = "Призы"

// 41. Контактная информация экстренных служб, медицинского персонала и других важных служб, для внутреннего пользования.
private val emergencyContacts: String = "Контакты важных служб"

// 42. Особые условия для участников с ограниченными возможностями
val infoForDisabledPeople: String = "Информация для участников с ограниченными возможностями"

// 43. Общее настроение участников (определяется опросами)
var eventMood: String = "Общее настроение"

// 44. Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия, так как зависит от фактического состава команд и взятых в работу задач.
lateinit var eventDetailSegment: String

// 45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
lateinit var specialGuest: String

// 46. Максимальное количество людей, которое может вместить место проведения.
val maxParticipantsCount: Int = 100

// 47. Количество часов, отведенное каждой команде для работы над проектом.
val teamHourLimit: Int = 4